<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- home -->
  <param name="robot_room" command="$(find xacro)/xacro --inorder '$(find innfos_control)/gazebo_control/models/room_without_door.urdf.xacro'" /> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="room_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model room -param robot_room -x 0 -y 0 -z 0 -R 1.57 -P 0 -Y 0"/> 

  <!-- robot -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find innfos_control)/gazebo_control/models/yang.urdf.xacro'" /> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="yang_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model yang -param robot_description -x 0 -y 0 -z 0 -R 0 -P 0 -Y 1.57"/> 

  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find innfos_control)/gazebo_control/rviz/yang.rviz"/> -->

</launch>
